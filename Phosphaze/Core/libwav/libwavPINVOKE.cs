//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


class libwavPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="SWIGRegisterExceptionCallbacks_libwav")]
    public static extern void SWIGRegisterExceptionCallbacks_libwav(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_libwav")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_libwav(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_libwav(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_libwav(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(libwavPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(libwavPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="SWIGRegisterStringCallback_libwav")]
    public static extern void SWIGRegisterStringCallback_libwav(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_libwav(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static libwavPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_M_PI_get")]
  public static extern double M_PI_get();

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_int24_data_set")]
  public static extern void int24_data_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_int24_data_get")]
  public static extern int int24_data_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_int24")]
  public static extern global::System.IntPtr new_int24();

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_delete_int24")]
  public static extern void delete_int24(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_CHUNK_ckID_set")]
  public static extern void WAVE_CHUNK_ckID_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_CHUNK_ckID_get")]
  public static extern string WAVE_CHUNK_ckID_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_CHUNK_ckSize_set")]
  public static extern void WAVE_CHUNK_ckSize_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_CHUNK_ckSize_get")]
  public static extern uint WAVE_CHUNK_ckSize_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_WAVE_CHUNK")]
  public static extern global::System.IntPtr new_WAVE_CHUNK();

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_delete_WAVE_CHUNK")]
  public static extern void delete_WAVE_CHUNK(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_RIFFTag_set")]
  public static extern void WAVE_H_RIFFTag_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_RIFFTag_get")]
  public static extern string WAVE_H_RIFFTag_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_fileLength_set")]
  public static extern void WAVE_H_fileLength_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_fileLength_get")]
  public static extern uint WAVE_H_fileLength_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_WAVETag_set")]
  public static extern void WAVE_H_WAVETag_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_WAVETag_get")]
  public static extern string WAVE_H_WAVETag_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_fmt_Tag_set")]
  public static extern void WAVE_H_fmt_Tag_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_fmt_Tag_get")]
  public static extern string WAVE_H_fmt_Tag_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_fmtSize_set")]
  public static extern void WAVE_H_fmtSize_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_fmtSize_get")]
  public static extern uint WAVE_H_fmtSize_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_wFormatTag_set")]
  public static extern void WAVE_H_wFormatTag_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_wFormatTag_get")]
  public static extern ushort WAVE_H_wFormatTag_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_nChannels_set")]
  public static extern void WAVE_H_nChannels_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_nChannels_get")]
  public static extern ushort WAVE_H_nChannels_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_nSamplesPerSec_set")]
  public static extern void WAVE_H_nSamplesPerSec_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_nSamplesPerSec_get")]
  public static extern ushort WAVE_H_nSamplesPerSec_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_nAvgBytesPerSec_set")]
  public static extern void WAVE_H_nAvgBytesPerSec_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_nAvgBytesPerSec_get")]
  public static extern uint WAVE_H_nAvgBytesPerSec_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_nBlockAlign_set")]
  public static extern void WAVE_H_nBlockAlign_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_nBlockAlign_get")]
  public static extern ushort WAVE_H_nBlockAlign_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_wBitsPerSample_set")]
  public static extern void WAVE_H_wBitsPerSample_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_wBitsPerSample_get")]
  public static extern ushort WAVE_H_wBitsPerSample_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_WAVE_H")]
  public static extern global::System.IntPtr new_WAVE_H();

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_delete_WAVE_H")]
  public static extern void delete_WAVE_H(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_PCM_header_set")]
  public static extern void WAVE_H_PCM_header_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_PCM_header_get")]
  public static extern global::System.IntPtr WAVE_H_PCM_header_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_PCM_chunks_set")]
  public static extern void WAVE_H_PCM_chunks_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_PCM_chunks_get")]
  public static extern global::System.IntPtr WAVE_H_PCM_chunks_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_WAVE_H_PCM")]
  public static extern global::System.IntPtr new_WAVE_H_PCM();

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_delete_WAVE_H_PCM")]
  public static extern void delete_WAVE_H_PCM(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_MEDIASUBTYPE_PCM_get")]
  public static extern global::System.IntPtr WAVE_MEDIASUBTYPE_PCM_get();

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_EXTENDED_header_set")]
  public static extern void WAVE_H_EXTENDED_header_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_EXTENDED_header_get")]
  public static extern global::System.IntPtr WAVE_H_EXTENDED_header_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_EXTENDED_cbSizeExtension_set")]
  public static extern void WAVE_H_EXTENDED_cbSizeExtension_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_EXTENDED_cbSizeExtension_get")]
  public static extern ushort WAVE_H_EXTENDED_cbSizeExtension_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_EXTENDED_wValidBitsPerSample_set")]
  public static extern void WAVE_H_EXTENDED_wValidBitsPerSample_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_EXTENDED_wValidBitsPerSample_get")]
  public static extern ushort WAVE_H_EXTENDED_wValidBitsPerSample_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_EXTENDED_dwChannelMask_set")]
  public static extern void WAVE_H_EXTENDED_dwChannelMask_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_EXTENDED_dwChannelMask_get")]
  public static extern uint WAVE_H_EXTENDED_dwChannelMask_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_EXTENDED_SubFormat_set")]
  public static extern void WAVE_H_EXTENDED_SubFormat_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_EXTENDED_SubFormat_get")]
  public static extern string WAVE_H_EXTENDED_SubFormat_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_EXTENDED_chunks_set")]
  public static extern void WAVE_H_EXTENDED_chunks_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_WAVE_H_EXTENDED_chunks_get")]
  public static extern global::System.IntPtr WAVE_H_EXTENDED_chunks_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_WAVE_H_EXTENDED")]
  public static extern global::System.IntPtr new_WAVE_H_EXTENDED();

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_delete_WAVE_H_EXTENDED")]
  public static extern void delete_WAVE_H_EXTENDED(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_memblock_p_set")]
  public static extern void memblock_p_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_memblock_p_get")]
  public static extern uint memblock_p_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_memblock_nBytes_set")]
  public static extern void memblock_nBytes_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_memblock_nBytes_get")]
  public static extern uint memblock_nBytes_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_memblock")]
  public static extern global::System.IntPtr new_memblock();

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_delete_memblock")]
  public static extern void delete_memblock(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_Stereo__SWIG_0")]
  public static extern global::System.IntPtr new_Stereo__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_Stereo__SWIG_1")]
  public static extern global::System.IntPtr new_Stereo__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_Stereo__SWIG_2")]
  public static extern global::System.IntPtr new_Stereo__SWIG_2(int jarg1, int jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Stereo_next")]
  public static extern bool Stereo_next(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Stereo_prev")]
  public static extern bool Stereo_prev(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Stereo_reset")]
  public static extern void Stereo_reset(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Stereo_getIndex")]
  public static extern ulong Stereo_getIndex(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Stereo_getnSamples")]
  public static extern ulong Stereo_getnSamples(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Stereo_getnSamplesPerSec")]
  public static extern int Stereo_getnSamplesPerSec(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Stereo_getLeft")]
  public static extern int Stereo_getLeft(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Stereo_getRight")]
  public static extern int Stereo_getRight(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Stereo_getAvg")]
  public static extern int Stereo_getAvg(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Stereo_setLeft")]
  public static extern int Stereo_setLeft(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Stereo_setRight")]
  public static extern int Stereo_setRight(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Stereo_setAvg")]
  public static extern int Stereo_setAvg(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Stereo_maxAmp")]
  public static extern int Stereo_maxAmp(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Stereo_scale")]
  public static extern double Stereo_scale(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_delete_Stereo")]
  public static extern void delete_Stereo(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTChannelResult_k_set")]
  public static extern void DFTransform_DFTChannelResult_k_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTChannelResult_k_get")]
  public static extern int DFTransform_DFTChannelResult_k_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTChannelResult_real_set")]
  public static extern void DFTransform_DFTChannelResult_real_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTChannelResult_real_get")]
  public static extern double DFTransform_DFTChannelResult_real_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTChannelResult_imag_set")]
  public static extern void DFTransform_DFTChannelResult_imag_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTChannelResult_imag_get")]
  public static extern double DFTransform_DFTChannelResult_imag_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTChannelResult_freq_set")]
  public static extern void DFTransform_DFTChannelResult_freq_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTChannelResult_freq_get")]
  public static extern double DFTransform_DFTChannelResult_freq_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTChannelResult_mag_set")]
  public static extern void DFTransform_DFTChannelResult_mag_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTChannelResult_mag_get")]
  public static extern double DFTransform_DFTChannelResult_mag_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTChannelResult_angle_set")]
  public static extern void DFTransform_DFTChannelResult_angle_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTChannelResult_angle_get")]
  public static extern double DFTransform_DFTChannelResult_angle_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTChannelResult_dbmag_set")]
  public static extern void DFTransform_DFTChannelResult_dbmag_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTChannelResult_dbmag_get")]
  public static extern double DFTransform_DFTChannelResult_dbmag_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_DFTransform_DFTChannelResult")]
  public static extern global::System.IntPtr new_DFTransform_DFTChannelResult();

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_delete_DFTransform_DFTChannelResult")]
  public static extern void delete_DFTransform_DFTChannelResult(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTResult_left_set")]
  public static extern void DFTransform_DFTResult_left_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTResult_left_get")]
  public static extern global::System.IntPtr DFTransform_DFTResult_left_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTResult_right_set")]
  public static extern void DFTransform_DFTResult_right_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTResult_right_get")]
  public static extern global::System.IntPtr DFTransform_DFTResult_right_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTResult_stereo_set")]
  public static extern void DFTransform_DFTResult_stereo_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_DFTResult_stereo_get")]
  public static extern global::System.IntPtr DFTransform_DFTResult_stereo_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_DFTransform_DFTResult")]
  public static extern global::System.IntPtr new_DFTransform_DFTResult();

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_delete_DFTransform_DFTResult")]
  public static extern void delete_DFTransform_DFTResult(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_DFTransform")]
  public static extern global::System.IntPtr new_DFTransform(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_delete_DFTransform")]
  public static extern void delete_DFTransform(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_hasNext")]
  public static extern bool DFTransform_hasNext(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_next__SWIG_0")]
  public static extern global::System.IntPtr DFTransform_next__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_next__SWIG_1")]
  public static extern global::System.IntPtr DFTransform_next__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_DFTransform_getnSamples")]
  public static extern ulong DFTransform_getnSamples(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_FFTransform")]
  public static extern global::System.IntPtr new_FFTransform(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_delete_FFTransform")]
  public static extern void delete_FFTransform(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_FFTransform_ComplexFFT__SWIG_0")]
  public static extern void FFTransform_ComplexFFT__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_FFTransform_ComplexFFT__SWIG_1")]
  public static extern void FFTransform_ComplexFFT__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_FFTransform_hasNext")]
  public static extern bool FFTransform_hasNext(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_FFTransform_next__SWIG_0")]
  public static extern global::System.IntPtr FFTransform_next__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_FFTransform_next__SWIG_1")]
  public static extern global::System.IntPtr FFTransform_next__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_Wave__SWIG_0")]
  public static extern global::System.IntPtr new_Wave__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_Wave__SWIG_1")]
  public static extern global::System.IntPtr new_Wave__SWIG_1(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_Wave__SWIG_2")]
  public static extern global::System.IntPtr new_Wave__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_delete_Wave")]
  public static extern void delete_Wave(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_getH")]
  public static extern global::System.IntPtr Wave_getH(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_get_data_p")]
  public static extern uint Wave_get_data_p(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_get_data_size")]
  public static extern int Wave_get_data_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_hasNext__SWIG_0")]
  public static extern bool Wave_hasNext__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_hasNext__SWIG_1")]
  public static extern bool Wave_hasNext__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_next__SWIG_0")]
  public static extern global::System.IntPtr Wave_next__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_next__SWIG_1")]
  public static extern global::System.IntPtr Wave_next__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_getLastNextResult")]
  public static extern global::System.IntPtr Wave_getLastNextResult(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_DFT")]
  public static extern global::System.IntPtr Wave_DFT(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_FFT")]
  public static extern global::System.IntPtr Wave_FFT(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_getStereoObject")]
  public static extern global::System.IntPtr Wave_getStereoObject(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_DFTWindow")]
  public static extern global::System.IntPtr Wave_DFTWindow(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_nSamplesPerSec")]
  public static extern int Wave_nSamplesPerSec(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_detectBPM")]
  public static extern int Wave_detectBPM(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, int jarg4, int jarg5);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_getWaveFormatEx")]
  public static extern global::System.IntPtr Wave_getWaveFormatEx(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_getWaveFormatExtensible")]
  public static extern global::System.IntPtr Wave_getWaveFormatExtensible(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_isExtendedWave")]
  public static extern bool Wave_isExtendedWave(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_reset")]
  public static extern void Wave_reset(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Wave_correlation")]
  public static extern double Wave_correlation(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_StatBeatDetection__SWIG_0")]
  public static extern global::System.IntPtr new_StatBeatDetection__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, ulong jarg3);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_StatBeatDetection__SWIG_1")]
  public static extern global::System.IntPtr new_StatBeatDetection__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_StatBeatDetection__SWIG_2")]
  public static extern global::System.IntPtr new_StatBeatDetection__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_delete_StatBeatDetection")]
  public static extern void delete_StatBeatDetection(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_StatBeatDetection_release")]
  public static extern void StatBeatDetection_release(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_StatBeatDetection_length")]
  public static extern int StatBeatDetection_length(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_StatBeatDetection_hasNext")]
  public static extern bool StatBeatDetection_hasNext(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_StatBeatDetection_next")]
  public static extern double StatBeatDetection_next(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_StatBeatDetection_getPrecision")]
  public static extern int StatBeatDetection_getPrecision(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_new_Audio")]
  public static extern global::System.IntPtr new_Audio(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_delete_Audio")]
  public static extern void delete_Audio(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Audio_framesAvailable")]
  public static extern int Audio_framesAvailable(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Audio_fillBuffer__SWIG_0")]
  public static extern bool Audio_fillBuffer__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Audio_fillBuffer__SWIG_1")]
  public static extern bool Audio_fillBuffer__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Audio_getChannelCount")]
  public static extern uint Audio_getChannelCount(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Audio_getChannelVolume")]
  public static extern float Audio_getChannelVolume(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_Audio_setChannelVolume")]
  public static extern void Audio_setChannelVolume(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("libwav", EntryPoint="CSharp_FFTransform_SWIGUpcast")]
  public static extern global::System.IntPtr FFTransform_SWIGUpcast(global::System.IntPtr jarg1);
}
